name: Auto-trigger Marketplace Deployment (Dry Run)

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - 'pom.xml'
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  check-version-change:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to properly detect changes

      - name: Extract current version from pom.xml
        id: current_version
        run: |
          CURRENT_VERSION=$(grep -oE '<liquibase-secure.version>[^<]+</liquibase-secure.version>' pom.xml | sed -E 's/<\/?liquibase-secure.version>//g')
          echo "Current version: $CURRENT_VERSION"
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Check if liquibase-secure version changed in this push
        id: version_changed
        run: |
          CURRENT_VERSION="${{ steps.current_version.outputs.version }}"

          # Check if the liquibase-secure.version line was modified in the commits being pushed
          # Use git diff to check if the specific line changed between HEAD~1 and HEAD
          DIFF_OUTPUT=$(git diff HEAD~1 HEAD -- pom.xml | grep -E '[-+].*<liquibase-secure.version>' || true)

          if [ -n "$DIFF_OUTPUT" ]; then
            # Extract the old version from the diff (line starting with -)
            OLD_VERSION=$(echo "$DIFF_OUTPUT" | grep -E '^-.*<liquibase-secure.version>' | sed -E 's/.*<liquibase-secure.version>([^<]+)<\/liquibase-secure.version>.*/\1/' || echo "")
            # Extract the new version from the diff (line starting with +)
            NEW_VERSION=$(echo "$DIFF_OUTPUT" | grep -E '^\+.*<liquibase-secure.version>' | sed -E 's/.*<liquibase-secure.version>([^<]+)<\/liquibase-secure.version>.*/\1/' || echo "")

            if [ -n "$OLD_VERSION" ] && [ -n "$NEW_VERSION" ] && [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
              echo "✅ liquibase-secure version changed from $OLD_VERSION to $NEW_VERSION"
              echo "changed=true" >> $GITHUB_OUTPUT
              echo "old_version=$OLD_VERSION" >> $GITHUB_OUTPUT
              echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
            else
              echo "ℹ️  liquibase-secure.version line modified but version unchanged. Skipping deployment trigger."
              echo "changed=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "ℹ️  No change to liquibase-secure.version detected in this commit. Skipping deployment trigger."
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Verify Dockerfile and pom.xml versions match
        if: steps.version_changed.outputs.changed == 'true'
        id: verify_match
        run: |
          DOCKERFILE_VERSION=$(grep -E '^FROM liquibase/liquibase-secure:' Dockerfile | head -1 | cut -d':' -f2 | cut -d' ' -f1)
          POM_VERSION="${{ steps.current_version.outputs.version }}"

          echo "Dockerfile version: $DOCKERFILE_VERSION"
          echo "pom.xml version: $POM_VERSION"

          if [ "$DOCKERFILE_VERSION" != "$POM_VERSION" ]; then
            echo "❌ Version mismatch! Dockerfile: $DOCKERFILE_VERSION, pom.xml: $POM_VERSION"
            echo "Skipping deployment trigger due to version mismatch."
            echo "match=false" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "✅ Versions match: $POM_VERSION"
            echo "match=true" >> $GITHUB_OUTPUT
          fi

      - name: Generate test version tag
        if: steps.version_changed.outputs.changed == 'true' && steps.verify_match.outputs.match == 'true'
        id: test_version
        run: |
          # Use the liquibase-secure version for the test tag
          LIQUIBASE_SECURE_VERSION="${{ steps.version_changed.outputs.new_version }}"
          TEST_VERSION="test-${LIQUIBASE_SECURE_VERSION}"
          echo "Generated test version tag: $TEST_VERSION"
          echo "tag=$TEST_VERSION" >> $GITHUB_OUTPUT

      - name: Trigger deploy-extension-to-marketplace workflow (dry run)
        if: steps.version_changed.outputs.changed == 'true' && steps.verify_match.outputs.match == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TEST_TAG="${{ steps.test_version.outputs.tag }}"
          echo "🚀 Triggering deploy-extension-to-marketplace.yml (dry_run=true)"
          echo "   Test image tag: $TEST_TAG"

          gh workflow run deploy-extension-to-marketplace.yml \
            --ref main \
            -f image_tag="$TEST_TAG" \
            -f dry_run=true

          echo "✅ Workflow triggered successfully!"
          echo "Check the workflow run at: https://github.com/${{ github.repository }}/actions/workflows/deploy-extension-to-marketplace.yml"

      - name: Post summary
        if: always()
        run: |
          echo "## Automation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Current Version:** ${{ steps.current_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.version_changed.outputs.changed }}" == "true" ]; then
            echo "**Previous Version:** ${{ steps.version_changed.outputs.old_version }}" >> $GITHUB_STEP_SUMMARY
            echo "**New Version:** ${{ steps.version_changed.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            if [ "${{ steps.verify_match.outputs.match }}" == "true" ]; then
              echo "✅ **Status:** New version detected! Deployment workflow triggered in dry-run mode" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Status:** Version mismatch between Dockerfile and pom.xml" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "ℹ️  **Status:** No liquibase-secure version change detected in this commit, deployment not triggered" >> $GITHUB_STEP_SUMMARY
          fi
