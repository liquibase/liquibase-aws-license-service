name: Dependabot auto-merge

on:
  pull_request:
    paths:
      - Dockerfile  # This ensures the workflow only runs when the Dockerfile is changed.
      - pom.xml     # This ensures the workflow also runs when pom.xml is changed specifically for liquibase-secure-version.
permissions:
  contents: write
  pull-requests: write
  id-token: write # Required for OIDC authentication

jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' && github.repository == 'liquibase/liquibase-aws-license-service'
    steps:

      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if liquibase-secure.version was changed
        id: check_secure_version
        run: |
          # Check if the PR contains changes to liquibase-secure.version in pom.xml
          if git diff HEAD~1 HEAD -- pom.xml | grep -q "liquibase-secure.version"; then
            echo "secure_version_changed=true" >> $GITHUB_OUTPUT
            echo "Liquibase secure version was changed in this PR"
          else
            echo "secure_version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Enable auto-merge for Dependabot PRs
        if: contains(github.event.pull_request.changed_files, 'Dockerfile') || steps.check_secure_version.outputs.secure_version_changed == 'true'
        run: gh pr merge --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{env.LIQUIBOT_PAT_GPM_ACCESS}}
